# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CfaDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, token=None, cfa_image=None, user=None):  # noqa: E501
        """CfaDTO - a model defined in OpenAPI

        :param token: The token of this CfaDTO.  # noqa: E501
        :type token: str
        :param cfa_image: The cfa_image of this CfaDTO.  # noqa: E501
        :type cfa_image: int
        :param user: The user of this CfaDTO.  # noqa: E501
        :type user: 'User'
        """
        self.openapi_types = {
            'token': str,
            'cfa_image': 'CfaImage',
            'user': 'User'
        }

        self.attribute_map = {
            'token': 'token',
            'cfa_image': 'cfa_image',
            'user': 'user'
        }

        self._token = token
        self._cfa_image = cfa_image
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'CfaDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The cfa_dto of this CfaDTO.  # noqa: E501
        :rtype: CfaDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self):
        """Gets the token of this CfaDTO.


        :return: The token of this CfaDTO.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this CfaDTO.


        :param token: The token of this CfaDTO.
        :type token: str
        """

        self._token = token

    @property
    def cfa_image(self):
        """Gets the cfa_image of this CfaDTO.


        :return: The cfa_image of this CfaDTO.
        :rtype: int
        """
        return self._cfa_image

    @cfa_image.setter
    def cfa_image(self, cfa_image):
        """Sets the cfa_image of this CfaDTO.


        :param cfa_image: The cfa_image of this CfaDTO.
        :type cfa_image: int
        """

        self._cfa_image = cfa_image

    @property
    def user(self):
        """Gets the user of this CfaDTO.


        :return: The user of this CfaDTO.
        :rtype: int
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this CfaDTO.


        :param user: The user of this CfaDTO.
        :type user: int
        """

        self._user = user
