# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CreateOfferDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cfa_image_id=None, count=None, price=None):  # noqa: E501
        """CreateOfferDTO - a model defined in OpenAPI

        :param cfa_image_id: The cfa_image_id of this CreateOfferDTO.  # noqa: E501
        :type cfa_image_id: int
        :param count: The count of this CreateOfferDTO.  # noqa: E501
        :type count: int
        :param price: The price of this CreateOfferDTO.  # noqa: E501
        :type price: int
        """
        self.openapi_types = {
            'cfa_image_id': int,
            'count': int,
            'price': int
        }

        self.attribute_map = {
            'cfa_image_id': 'cfa_image_id',
            'count': 'count',
            'price': 'price'
        }

        self._cfa_image_id = cfa_image_id
        self._count = count
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> 'CreateOfferDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The create_offer_dto of this CreateOfferDTO.  # noqa: E501
        :rtype: CreateOfferDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cfa_image_id(self):
        """Gets the cfa_image_id of this CreateOfferDTO.


        :return: The cfa_image_id of this CreateOfferDTO.
        :rtype: int
        """
        return self._cfa_image_id

    @cfa_image_id.setter
    def cfa_image_id(self, cfa_image_id):
        """Sets the cfa_image_id of this CreateOfferDTO.


        :param cfa_image_id: The cfa_image_id of this CreateOfferDTO.
        :type cfa_image_id: int
        """

        self._cfa_image_id = cfa_image_id

    @property
    def count(self):
        """Gets the count of this CreateOfferDTO.


        :return: The count of this CreateOfferDTO.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this CreateOfferDTO.


        :param count: The count of this CreateOfferDTO.
        :type count: int
        """

        self._count = count

    @property
    def price(self):
        """Gets the price of this CreateOfferDTO.


        :return: The price of this CreateOfferDTO.
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CreateOfferDTO.


        :param price: The price of this CreateOfferDTO.
        :type price: int
        """

        self._price = price
