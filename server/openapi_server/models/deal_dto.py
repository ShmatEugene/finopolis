# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class DealDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, initiator=None, initiator_items=None, host_items=None, seller=None):  # noqa: E501
        """DealDTO - a model defined in OpenAPI

        :param id: The id of this DealDTO.  # noqa: E501
        :type id: int
        :param initiator: The initiator of this DealDTO.  # noqa: E501
        :type initiator: PublicUser
        :param initiator_items: The initiator_items of this DealDTO.  # noqa: E501
        :type initiator_items: list
        :param host_items: The host_items of this DealDTO.  # noqa: E501
        :type host_items: list
        """
        self.openapi_types = {
            'id': int,
            'initiator': 'PublicUser',
            'initiator_items': list,
            'host_items': list
        }

        self.attribute_map = {
            'id': 'id',
            'initiator': 'initiator',
            'initiator_items': 'initiator_items',
            'host_items': 'host_items'
        }

        self._id = id
        self._initiator = initiator
        self._initiator_items = initiator_items
        self._host_items = host_items

    @classmethod
    def from_dict(cls, dikt) -> 'DealDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The offer_dto of this DealDTO.  # noqa: E501
        :rtype: DealDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DealDTO.


        :return: The id of this DealDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DealDTO.


        :param id: The id of this DealDTO.
        :type id: int
        """

        self._id = id

    @property
    def initiator(self):
        """Gets the initiator of this DealDTO.


        :return: The initiator of this DealDTO.
        :rtype: PublicUser
        """
        return self._initiator

    @initiator.setter
    def initiator(self, initiator):
        """Sets the initiator of this DealDTO.


        :param initiator: The initiator of this DealDTO.
        :type initiator: PublicUser
        """

        self._initiator = initiator

    @property
    def initiator_items(self):
        """Gets the initiator_items of this DealDTO.


        :return: The initiator_items of this DealDTO.
        :rtype: list
        """
        return self._initiator_items

    @initiator_items.setter
    def initiator_items(self, initiator_items):
        """Sets the initiator_items of this DealDTO.


        :param initiator_items: The initiator_items of this DealDTO.
        :type initiator_items: list
        """

        self._initiator_items = initiator_items

    @property
    def host_items(self):
        """Gets the host_items of this DealDTO.


        :return: The host_items of this DealDTO.
        :rtype: list
        """
        return self._host_items

    @host_items.setter
    def host_items(self, host_items):
        """Sets the host_items of this DealDTO.


        :param host_items: The host_items of this DealDTO.
        :type host_items: list
        """

        self._host_items = host_items
